#!/bin/bash
# include cprint
bash cprint.sh

# pomodoro notifier

clear

# color format terminal text printer
# usage
# cprint [color] [text]
# example 
# cprint 'red' "Hello Programmers"

cprint(){
    if [ $1 = "red" ];
    then
    result="\033[0;31m"
    elif [ $1 = "green" ];
    then
    result="\033[0;32m"
    elif [ $1 = "orange" ];
    then
    result="\033[0;33m"
    elif [ $1 = "black" ];
    then
    result="\033[0;30m"
    elif [ $1 = "white" ];
    then
    result="\033[1;37m"
    elif [ $1 = "blue" ];
    then
    result="\033[0;34m"
    elif [ $1 = "purple" ];
    then
    result="\033[0;35m"
    elif [ $1 = "cyan" ];
    then
    result="\033[0;36m"
    elif [ $1 = "lgreen" ];
    then
    result="\033[1;32m"
    elif [ $1 = "lred" ];
    then
    result="\033[1;31m"
    elif [ $1 = "lblue" ];
    then
    result="\033[1;34m"
    elif [ $1 = "lpurple" ];
    then
    result="\033[1;35m"
    elif [ $1 = "yellow" ];
    then
    result="\033[1;33m"
    elif [ $1 = "nc" ];
    then
    result="\033[0m"    # no color
    else 
    result="\033[0;31mColor err"
    fi
    printf "${result} ${2}"
}

# check if notify-send is installed
if [ "$notify-send" ]
then
cprint 'nc' "notify-send:" 
cprint 'cyan' "OK\n\n"
else
cprint 'red' "notify-send error: you must have installed notify-send\n\n"
fi

# startup message
cprint 'purple' "P O M O D O R O   T I M E R\n\n"
cprint 'red' "#############################\n"
cprint 'red' "#"; cprint 'cyan' "        ########         "; cprint 'red' "#\n";
cprint 'red' "#                           #\n";
cprint 'red' "#        ##########         #\n";
cprint 'red' "#    ##################     #\n";
cprint 'red' "#  #####################    #\n";
cprint 'red' "# #######################   #\n";
cprint 'red' "# #######################   #\n";
cprint 'red' "# #######################   #\n";
cprint 'red' "#  #####################    #\n";
cprint 'red' "#    #################      #\n";
cprint 'red' "#          ####             #\n";
cprint 'red' "#                           #\n";
cprint 'red' "#############################\n";

cprint 'yellow' "\n\nhow many sessions will you do? "
read s
cprint 'yellow' "\nminutes to focus? "
read m
cprint 'yellow' "\nbreak minutes? "
read b
cprint 'red' "\nPRESS ANY KEY AND ENTER TO START..."
read k
cprint 'cyan' \n"GOOD LUCK :)"
sleep 4 && clear

sec2min=60 # seconds in a minute
counter=0   # session counter

while [ $counter -le $(($s - 1)) ]
do
# session start
spd-say -l en -t female2 "session started, get focused well. Good luck"
notify-send -t 5000 -i "${PWD}/pomoimages/start.jpg" "50 min pomodoro start, $(($counter + 1)) session"
# counting minute by minute and prompt minutew left
counter2=0
while [ $counter2 -le $m ]
do
cprint 'purple' "SESSION $(($counter + 1))\n"
cprint 'red' "*********************************\n"
cprint 'red' "*  became $(($m - $counter2)) focusing minutes  *\n"
cprint 'red' "********************************\n"
sleep $(($sec2min)) 
((counter2++))
clear
done
# break start
spd-say -l en -t female2 "session has finished, get a well break. Enjoy!"
notify-send -t 5000 -i "${PWD}/pomoimages/break.jpg" "Break started, enjoy!"
counter2=0
if [ $(($counter)) != $(($s - 1)) ]
then
while [ $counter2 -le $b ]
do
cprint 'purple' "~BREAK~\n"
cprint 'red' "*********************************\n"
cprint 'red' "*  became $(($m - $counter2)) breaking  minutes  *\n"
cprint 'red' "********************************\n"
sleep $(($sec2min)) 
((counter2++))
clear
done
fi
((counter++))
done

spd-say -l en -t female2 "you have finished all sessions, congratulations!. Check the terminal and select if you want to do more sessions" 

cprint 'red' "do you want to do another pomodoro? y|n"

read o

if [ $o = 'y' ]
then
./pomo
fi

exit 1
# end
